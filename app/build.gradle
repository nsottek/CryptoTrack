apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "jacoco"

android {
  compileSdkVersion 28

  defaultConfig {
    applicationId "com.nathansottek.cryptotrack"
    minSdkVersion 21
    targetSdkVersion 28
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      testCoverageEnabled true
    }
  }

  compileOptions {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  lintOptions {
    abortOnError false
  }

  sourceSets {
    String commonTestDir = 'src/commonTest/java'
    test {
      java.srcDir commonTestDir
    }
    androidTest {
      java.srcDir commonTestDir
    }
  }

  dependencies {

    // Butterknife
    def butterknife_version = "8.8.1"
    implementation "com.jakewharton:butterknife:$butterknife_version"
    kapt "com.jakewharton:butterknife-compiler:$butterknife_version"

    // Dagger
    def dagger_version = "2.16"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

    // Lifecycle
    def lifecycle_version = "1.1.1"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

    // Networking - Retrofit
    def retrofit_version = "2.4.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'

    // Support
    def support_version = "28.0.0"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "com.android.support:design:$support_version"

    // Testing

    // Note: Future versions of Mockito have issues with packaged Byte Buddy dependency
    // Refer to this thread for resolution: https://github.com/mockito/mockito/issues/1511
    def mockito_version = "2.19.1"

    def mockito_kotlin_version = "2.0.0-RC1"
    def espresso_version = "3.0.2"

    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation "com.android.support:support-annotations:$support_version"
  }

  task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
      xml.enabled = true
      html.enabled = true
    }

    def moduleSrcDir = 'src/main/java'
    def mainSrc = "$project.projectDir/$moduleSrcDir"
    def pureJavaClassDir = 'classes/java/main'
    def androidJavaClassDir = 'intermediates/javac/debug'

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*',
                      '**/*_Impl.class', '**/*Impl$*.class', '**/*_Factory.class', '**/*_*Factory.class',
                      '**/Dagger*.class', '**/*_MembersInjector.class', '**/*_ViewBinding*.*']
    def javaTree = fileTree(dir: "$project.buildDir/$pureJavaClassDir", excludes: fileFilter)
    def androidTree = fileTree(dir: "$project.buildDir/$androidJavaClassDir", excludes: fileFilter)
    def debugTree = androidTree + javaTree

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
        'jacoco/test.exec', 'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
  }
}
